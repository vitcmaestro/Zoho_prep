//Hackerrank
//https://www.hackerrank.com/challenges/the-power-sum/problem
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    public static long pow(long num,long pow)
    {
        if(pow == 1|| pow == 0)
        return num;
        else
        return num*(pow(num,pow-1));
    }
    static int recursion(long x,long n,long num)
    {
        //System.out.println(num);
        if(x == pow(num,n))
        {
            System.out.println(num+" "+x);
            return 1;
        }
        else if(x<0 || x < num)
        {
            return 0;
        }
        else
        
            return recursion(x,n,num+1)+recursion(x-(pow(num,n)),n,num+1);
        
    }
    // Complete the powerSum function below.
    static int powerSum(int X, int N) {
       if(N==0)
       return 1;
    return recursion(X,N,1);

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int X = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int N = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int result = powerSum(X, N);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
